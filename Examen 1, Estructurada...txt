Maria Celeste / Estefanny Jaimes Leon

EXAMEN 1 ESTRUCTURAS DE DATOS DINAMICAS

1. Dado un numero n, necesitamos imprimir todos los números binarios de n dígitos con la misma suma en las mitades izquierda y derecha. Sin n es impar, entonces el elemento medio puede ser 0 o 1

String generarNumerosBinarios(int[ ] numBi = 0; int n){
	if(numBi = null){numBi = new int[n];}
	if(suma(numBi)<n){
		if(n%2 == 1){
			numBi[n/2+1]=1;
			generarNumerosBinarios(numBi, n);
			numBi[n/2+1]=0;
			generarNumerosBinarios(numBi,n);
      }
      for(int i=0; i<numBi; i++){
      	if(numBi[i] == 0){
      		numBi[i]=1;
      		numBi[numBi.length()-i-1]=1;
      		generarNumerosBinarios(numBi=0);
      }
      if(numBi[i] == 0 && i>1){
      		numBi[i]=1;
      		numBi[i-1]=0;
      		numBi[numBi.length()-i]=0
      		numBi[numBi.length()-i-1]=1;
      		generarNumerosBinarios(numBi=0);
      }
      
      }
      }else{
      Return numBi.toString();
      }
end generarNumerosBinarios
2. Dado un arreglo de tamaño n, genere e imprima todas las combinaciones posibles de r elementos en el arreglo. Por ejemplo, si la matriz de entrada es {1,2,3,4} y r=2, entonces la salida debe ser {1,2},{1,3},{1,4},{2,3},{2,4},{3,4}:

String imprCombinatoria (int [ ] arreglo, int[] indices, int r, int indiceAumento, int Aumento){
      if(indices==null){
      indices = new int[r];
      }
      String texto=””;
	if(indiceAumento<r){
		for(int ind=indiceAumento; ind<arreglo.length; ind++){
			imprCombinatoria(arreglo, indices, r, ind+1, indiceAumento+1);
      }
      }else{
      	texto = arreglo[índices];
      }
end imprCombinatoria

3. Dada una matriz de tamaño N x M, cree un algoritmo recursivo para recorrer la matriz de derecha a izquierda: 
String leerMatriz(int fila, int columna, int[ ][ ] matriz)
      String texto = "";
      if(fila == matriz.length-1 && columna== matriz[fila].length)
      return texto;
      else{
      if(columna == matriz [fila].length){
      return texto + leerMatriz(fila+1, 0);
      }else{
      texto = matriz[fila][columna].toString()+",";
      return texto + leerMatriz(fila, columna+1);
      }
      }
      }
end leerMatriz
